

1. 프로그램에서 경우의 수
	1. 정상 실행
		
	2. 비정상 실행
		- 처리 불가능한 상태 : 에러
		- 처리 가능한 상태 : 예외
			프로그램 정지가 아니라 문제가 생겨도 유연하게 다음 로직들 실행
2. 현시대의 가장 중요한 자산
	- 사람에 대한 데이터
	- 사람에 대한 정보가 기록은 필수 : 로그기록
	
3. 정보기록의 범위
	trace < debug < info < warn < error
	예시 : info만 설정시 info 이상의 모든 레벨 실행 
	
	1. error - 사용자 요청을 처리하는 중에 발생되는 문제
	2. warn - 처리 가능한 문제가 발생되었을 때 기록하고자 하는 레벨, 또는 에러의 원인이 될 수 있는 레벨
	3. info	- 관리자 관점에서 실시간 발생되는 상황들을 파악하고자 하는 기본 정보 기록의 레벨
	4. debug - 개발자 관점에서 개발시에 소소한 진행 사항들 확인하고자 하는 레벨의 기록
	5. trace - 모든 상황 다 추적, 상세한 정보를 확인하고자 할 때 사용하는 레벨
	
4. log4j 사용 방법
	1단계 - library 다운로드 및 셋팅
	2단계 - log4j가 사용하는 사용자 정의 및 설정 정보로 log4j 스펙에 맞게 파일 생성
		log4j.properties 파일명을 사용
	3단계 - log4j 사용 코드로 개발		
	
5. log4j 개발 단계
	1단계 : 로그 기록의 기능을 보유한 객체 생성
	2단계 : 상황에 따라 해당 레벨(5가지 레벨) 선별해서 로직별 적용
	3단계 : properties 파일 완성
	4단계 : 실행하면서 사용
	5단계 : 실시간 서비스시에 로그 레벨 변동이 필요한 경우 코드 수정이 아니라 properties 파일 설정 정보만 수정
	
	
	
	